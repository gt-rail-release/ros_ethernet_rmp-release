<!--
   Author: Chris Dunkers, Worcester Polytechnic Institute
   Author: Russell Toris, Worcester Polytechnic Institute
  Version: June 10, 2014
-->

<launch>
  <arg name="update_delay_sec" default="0.02" />
  <arg name="log_data" default="false" />
  <arg name="cur_rmp_ip_addr" default="192.168.0.40" />
  <arg name="cur_rmp_port_num" default="8080" />
  <arg name="is_omni" default="false" />
  <arg name="velocity_limit" default="1.0" />
  <arg name="accel_limit" default="0.981" />
  <arg name="decel_limit" default="0.981" />
  <arg name="dtz_rate" default="0.981" />
  <arg name="coastdown_accel" default="0.1962" />
  <arg name="yaw_rate_limit" default="1.7" />
  <arg name="yaw_accel_limit" default="5.0" />
  <arg name="tire_diameter" default="0.46228" />
  <arg name="wheel_base_length" default="0.5842" />
  <arg name="wheel_track_width" default="0.569976" />
  <arg name="gear_ratio" default="24.2667" />
  <arg name="config_bitmap" default="1" />
  <arg name="ip_address" default="192.168.0.40" />
  <arg name="port_num" default="8080" />
  <arg name="subnet_mask" default="192.168.0.1" />
  <arg name="gateway" default="255.255.255.0" />
  <arg name="user_defined_feedback_bitmap_1" default="4294967295" />
  <arg name="user_defined_feedback_bitmap_2" default="4294967295" />
  <arg name="user_defined_feedback_bitmap_3" default="4294967295" />
  <arg name="user_defined_feedback_bitmap_4" default="0" />

  <node pkg="ros_ethernet_rmp" type="ethernet_rmp.py" name="ethernet_rmp" output="screen">
    <param name="update_delay_sec" type="double" value="$(arg update_delay_sec)" />
    <param name="log_data" type="bool" value="$(arg log_data)" />
    <param name="current_rmp_ip_addr" type="string" value="$(arg cur_rmp_ip_addr)" />
    <param name="current_rmp_port_num" type="int" value="$(arg cur_rmp_port_num)" />
    <param name="is_omni" type="bool" value="$(arg is_omni)" />
    <param name="my_velocity_limit_mps" type="double" value="$(arg velocity_limit)" />
    <param name="my_accel_limit_mps2" type="double" value="$(arg accel_limit)" />
    <param name="my_decel_limit_mps2" type="double" value="$(arg decel_limit)" />
    <param name="my_dtz_rate_mps2" type="double" value="$(arg dtz_rate)" />
    <param name="my_coastdown_accel_mps2" type="double" value="$(arg coastdown_accel)" />
    <param name="my_yaw_rate_limit_rps" type="double" value="$(arg yaw_rate_limit)" />
    <param name="my_yaw_accel_limit_rps2" type="double" value="$(arg yaw_accel_limit)" />
    <param name="my_tire_diameter_m" type="double" value="$(arg tire_diameter)" />
    <param name="my_wheel_base_length_m" type="double" value="$(arg wheel_base_length)" />
    <param name="my_wheel_track_width_m" type="double" value="$(arg wheel_track_width)" />
    <param name="my_gear_ratio" type="double" value="$(arg gear_ratio)" />
    <param name="my_config_bitmap" type="int" value="$(arg config_bitmap)" />
    <param name="my_ip_address" type="string" value="$(arg ip_address)" />
    <param name="my_port_num" type="int" value="$(arg port_num)" />
    <param name="my_subnet_mask" type="string" value="$(arg subnet_mask)" />
    <param name="my_gateway" type="string" value="$(arg gateway)" />
    <param name="my_user_defined_feedback_bitmap_1" type="double" value="$(arg user_defined_feedback_bitmap_1)" />
    <param name="my_user_defined_feedback_bitmap_2" type="double" value="$(arg user_defined_feedback_bitmap_2)" />
    <param name="my_user_defined_feedback_bitmap_3" type="double" value="$(arg user_defined_feedback_bitmap_3)" />
    <param name="my_user_defined_feedback_bitmap_4" type="double" value="$(arg user_defined_feedback_bitmap_4)" />
  </node>

  <arg name="publish_tf" value="true" />
  <node pkg="ros_ethernet_rmp" type="rmp_pose_updater.py" name="rmp_pose_updater" output="screen" >
    <param name="publish_tf" type="bool" value="$(arg publish_tf)" />
  </node>

  <arg name="has_two_wheels" value="true" />
  <arg name="link_left_front" value="base_link_left_wheel_joint" />
  <arg name="link_right_front" value="base_link_right_wheel_joint" />
  <arg name="link_left_rear" value="base_link_left_rear_wheel_joint" />
  <arg name="link_right_rear" value="base_link_right_rear_wheel_joint" />
  <node pkg="ros_ethernet_rmp" type="rmp_joint_state.py" name="rmp_joint_state" output="screen" >
    <param name="has_two_wheels" type="bool" value="$(arg has_two_wheels)" />
    <param name="link_left_front" type="string" value="$(arg link_left_front)" />
    <param name="link_right_front" type="string" value="$(arg link_right_front)" />
    <param name="link_left_rear" type="string" value="$(arg link_left_rear)" />
    <param name="link_right_rear" type="string" value="$(arg link_right_rear)" />
  </node>
  
  <arg name="include_batt_monitor" value="true"/>
  <group if="$(arg include_batt_monitor)">
    <include file="$(find battery_monitor_rmp)/launch/battery_monitor_rmp.launch"/>
  </group>
</launch>
